[versions]
# Kotlin
coroutines = "1.7.3"

#Libs
airflux-commons = "0.0.1-SNAPSHOT"
feel-engine = "1.19.0"
jackson = "2.16.1"
json-path = "2.9.0"

#Messaging
kafka = "3.6.0"

#Database
hikaricp = "5.1.0"
liquibase = "4.27.0"
postgresql = "42.7.2"

#Logging
logback = "1.4.14"
logstash = "6.6"
slf4j = "2.0.9"

#Test
kotest = "5.9.1"
mockito = "5.10.0"
mockito-kotlin = "5.2.0"
testcontainers = "1.19.7"
pitest-junit = "1.0.0"

#Gradle Plugins
detekt = "1.23.7"
dokka = "1.9.20"
gradle-git-version="3.1.0"
knit = "0.5.0"
kotlin = "2.1.0"
kover = "0.9.0"
license-report = "2.9"
pitest = "1.15.0"

[libraries]
#Kotlin
coroutines-core = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-core-jvm", version.ref = "coroutines" }

#Libs
airflux-commons-collections = { module = "io.github.airflux:airflux-commons-collections-jdk17", version.ref = "airflux-commons" }
airflux-commons-types = { module = "io.github.airflux:airflux-commons-types-jdk17", version.ref = "airflux-commons" }
feel-engine = { module = "org.camunda.feel:feel-engine", version.ref = "feel-engine" }
json-path = { module = "com.jayway.jsonpath:json-path", version.ref = "json-path" }
jackson-core = { module = "com.fasterxml.jackson.core:jackson-core", version.ref = "jackson" }
jackson-databind = { module = "com.fasterxml.jackson.core:jackson-databind", version.ref = "jackson" }
jsckson-module-kotlin = { module = "com.fasterxml.jackson.module:jackson-module-kotlin", version.ref = "jackson" }

#Messaging
kafka-client = { module = "org.apache.kafka:kafka-clients", version.ref = "kafka" }

#Database
hikaricp = { module = "com.zaxxer:HikariCP", version.ref = "hikaricp" }
liquibase-core = { module = "org.liquibase:liquibase-core", version.ref = "liquibase" }
postgresql = { module = "org.postgresql:postgresql", version.ref = "postgresql" }

#Logging
logback-classic = { module = "ch.qos.logback:logback-classic", version.ref = "logback" }
logback-core = { module = "ch.qos.logback:logback-core", version.ref = "logback" }
logstash-encoder = { module = "net.logstash.logback:logstash-logback-encoder", version.ref = "logstash" }
slf4j-api = { module = "org.slf4j:slf4j-api", version.ref = "slf4j" }
slf4j-over = { module = "org.slf4j:jcl-over-slf4j", version.ref = "slf4j" }

#Docs
knit-test = { module = "org.jetbrains.kotlinx:kotlinx-knit-test", version.ref = "knit" }

#Test
airflux-commons-types-kotest-matchers = { module = "io.github.airflux:airflux-commons-types-kotest-matchers-jdk17", version.ref = "airflux-commons" }
kotest-core = { module = "io.kotest:kotest-assertions-core", version.ref = "kotest" }
kotest-datatest = { module = "io.kotest:kotest-framework-datatest", version.ref = "kotest" }
kotest-junit5 = { module = "io.kotest:kotest-runner-junit5", version.ref = "kotest" }
mockito-core = { module = "org.mockito:mockito-core", version.ref = "mockito" }
mockito-kotlin = { module = "org.mockito.kotlin:mockito-kotlin", version.ref = "mockito-kotlin" }
testcontainers-junit = { module = "org.testcontainers:junit-jupiter", version.ref = "testcontainers" }
testcontainers-kafka = { module = "org.testcontainers:kafka", version.ref = "testcontainers" }
testcontainers-postgresql = { module = "org.testcontainers:postgresql", version.ref = "testcontainers" }

#Gradle Plugins
gradle-plugin-binary-compatibility-validator = { module = "org.jetbrains.kotlinx.binary-compatibility-validator:org.jetbrains.kotlinx.binary-compatibility-validator.gradle.plugin", version = "0.16.2" }
gradle-plugin-detekt = { module = "io.gitlab.arturbosch.detekt:detekt-gradle-plugin", version.ref = "detekt" }
gradle-plugin-dokka = { module = "org.jetbrains.dokka:dokka-gradle-plugin", version.ref = "dokka" }
gradle-plugin-git-version = { module = "com.palantir.gradle.gitversion:gradle-git-version", version.ref = "gradle-git-version" }
gradle-plugin-knit = { module = "org.jetbrains.kotlinx:kotlinx-knit", version.ref = "knit" }
gradle-plugin-kotlin = { module = "org.jetbrains.kotlin:kotlin-gradle-plugin", version.ref = "kotlin" }
gradle-plugin-kover = { module = "org.jetbrains.kotlinx:kover-gradle-plugin", version.ref = "kover" }
gradle-plugin-license-report = { module = "com.github.jk1:gradle-license-report", version.ref = "license-report" }
gradle-plugin-pitest = { module = "info.solidsoft.gradle.pitest:gradle-pitest-plugin", version.ref = "pitest" }

[bundles]
kotest = ["kotest-junit5", "kotest-core", "kotest-datatest"]
logging = ["slf4j-api", "logback-core"]
mockito = ["mockito-core", "mockito-kotlin"]
database = ["hikaricp", "postgresql"]
testcontainers-core = ["testcontainers-junit"]
testcontainers-postgresql = ["testcontainers-postgresql", "liquibase-core"]
testcontainers-kafka = ["testcontainers-kafka"]
jackson = ["jackson-core", "jackson-databind", "jsckson-module-kotlin"]
